name: Test Coverage

on:
  push:
    branches:
      - main
      - staging
  pull_request:
    branches:
      - main
      - staging

env:
  CC_TEST_REPORTER_ID: 5a71ca99e6c7c3176bd1dab0b9800d8ccdc52363a720309047c093e03f89d686

jobs:
  test-coverage:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:8.0.0
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: example
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongo --eval 'db.adminCommand(\"ping\")'" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6.6

      - name: Install dependencies
        run: bundle install

      - name: Wait for MongoDB to be ready
        run: |
          for i in {1..10}; do
            if mongo --host localhost --eval 'db.adminCommand("ping")' &>/dev/null; then
              echo "MongoDB is up and running!"
              break
            fi
            echo "Waiting for MongoDB to start..."
            sleep 5
          done

      - name: Run Code Climate Test Reporter (before tests)
        run: ./cc-test-reporter before-build

      - name: Run tests with coverage
        run: bundle exec rspec  # Adjust if you have a specific test command or directory

      - name: Upload Coverage to Code Climate
        run: ./cc-test-reporter after-build --exit-code $?
        env:
          CC_TEST_REPORTER_ID: 5a71ca99e6c7c3176bd1dab0b9800d8ccdc52363a720309047c093e03f89d686
